import { type ClientSchema, a, defineData } from "@aws-amplify/backend";

const schema = a
  .schema({
    // ✅ Existing To-Do App Model
    Todo: a
      .model({
        content: a.string(),
        isDone: a.boolean(),
      })
      .authorization((allow) => [allow.publicApiKey()]),

    // ✅ Updated EMRCustomer Model
    EMRCustomer: a
      .model({
        customerId: a.id(), // Auto-generated by Amplify
        name: a.string().required(),
        rcopiaId: a.string().required(), // Cannot enforce uniqueness at the schema level
        clientId: a.string().required(),
        baseUrl: a.string().required(),
        authSlug: a.string().required(),
        fhirSlug: a.string().required(),
        practiceId: a.string(), // Optional field
      })
      .authorization((allow) => [allow.publicApiKey()])
      .identifier(["rcopiaId"]), // ✅ Enforcing uniqueness via identifier()
  });

export type Schema = ClientSchema<typeof schema>;

export const data = defineData({
  schema,
  authorizationModes: {
    defaultAuthorizationMode: "apiKey",
    apiKeyAuthorizationMode: {
      expiresInDays: 30,
    },
  },
});